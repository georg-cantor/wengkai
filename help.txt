Git help:
说明：这个文件中交代了Git的一些基本用法，这样就不用每次都登录到廖雪峰的博客上去看了。

1.初始化一个Git仓库，在欲存此版本库的目录下，运行命令：git init
2.添加文件到Git仓库，分两步：
	2.1 使用命令git add <file>，在一个commit之前可以反复使用它，添加多个文件然后一并提交。
	2.2 使用命令git commit，完成。一般在提交的时候，应该加上“-m 关于此次提交的说明文字作为注释”
3.运行git status命令查看结果
	比如对文件进行了修改，还没有提交修改，可以通过此命令对这一情况进行查看
4.运行git diff命令查看当前做了那些修改
5.运行命令git log可以查看历史记录
	5.1 当然更好的更直观的方式是这样的：git log --pretty=oneline，以漂亮简洁的一行一个版本的方式显示
	5.2 git reflog 可以查看使用的命令的历史
6.使用git reset命令可以在Git仓库的各个版本之间来回切换，仿似回到过去，又回到现在
	6.1 git reset --hard HEAD^: 退回到上一个版本，当然git reset --hard HEAD^^:回退两个版本，git reset --hard HEAD~100:回退100个版本
	6.2 git reset --hard 版本号: 回到版本号所代表的那个版本
	说明：HEAD是一个指向当前版本的指针，所以在版本变换的时候非常快，效率超高。
7.在Git仓库的目录下，有一个.git目录，这个目录下，又一个stage成为暂存区，这里存放那些已经修改却还未提交的文件
	git跟踪的是修改，而不是文件本身，两次修改必须使用两次add，将修改都添加到暂存区，再提交。
8.再不小心作了不应该修改的东西的时候，需要对修改进行撤销，分为以下两种情况：
	8.1 只是在工作区作了修改，尚未将修改提交到暂存区，这是使用命令“ git checkout -- <file>”命令将工作区所做的修改丢弃
	8.2 如果将所做的修改提交到了暂存区，则需要分两步走：
		8.2.1 首先使用命令：“git reset HEAD <file>”，将暂存区更新到版本库中的最新版本（错误的修改尚未影响到正式的版本库）
		8.2.2 然后像8.1那样，将工作区的修改丢弃。
	8.3 如果所做的修改已经正式提交到了版本库的分支上，则只能参考6中版本回退的内容。
9.使用“git rm”命令删除一个文件
10.在Github上注册一个帐号，已经注册完成
11.将本地库关联到远程库的命令“git remote add origin git@github.com:qindongliangnudt/wengkai.git”
12.命令“git push -u origin master”将本地库的内容推送到远程库，实际上是把当前的master分支推送到远程。第一次推送时加上“-u”，这样会在推送的同时，把本地的master和远程的master关联起来。
13.从远程库克隆到本地的命令："git clone git@github.com:qindongliangnudt/wengkai.git"
14.创建并切换到分支：git checkout -b dev，查看当前的所有分支以及当前的活动分支：git branch,其中带*的那个是当前的活动分支
以下是关于分支的命令的总结：
	14.1 git branch:查看所有的分支以及当前的活动分支
	14.2 git branch <name>: 创建name分支
	14.3 git checkout <name>: 切换到name分支
	14.4 git checkout -b <name>: 创建以及切换到name分支
	14.5 git merge <name>: 合并某分支到当前的分支
	14.6 git branch -d <name>: 删除分支
